import React, {useState} from 'react';
import './App.css';
import {TimePicker} from '@material-ui/pickers';
import {Formulario, Label, GrupoInput, Input} from './elementos/Formularios';
import {FontAwesomeIcon} from'@fortawesome/react-fontawesome';
import {faCheckCircle} from '@fortawesome/free-solid-svg-icons';
import FormControl from '@material-ui/core/FormControl';
import { InputLabel } from '@mui/material';
import Select from '@mui/material/Select';
import TextField from '@material-ui/core/TextField';
import MenuItem from '@material-ui/core/MenuItem';
import * as react from 'react';
import Box from '@mui/material/Box';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import FormGroup from '@mui/material/FormGroup';
import dayjs from 'dayjs';
import Stack from '@mui/material/Stack';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import Button from '@mui/material/Button';
import Map from './Map';
import Credentials from './Credentials';
import { Wrapper, Status } from "@googlemaps/react-wrapper";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap/dist/js/bootstrap.bundle.min";
//import {reader, profileImg} from './Componentes/Image';
//import imageHandler from "@material-ui/pickers";
//import state from '@material-ui/core'; 

function App() {
  const [nombre,setNombre]=useState("Nombre de la empresa");

  /*const [fechaSeleccionada, cambiarFechaSeleccionada] = useState(new Date());
  console.log(fechaSeleccionada)*/

    const [tipo, setTipo] = React.useState('');
    const handleChange = (event) => {
      setTipo(event.target.value);
    };

      const [value, setValue] = React.useState(dayjs('2014-08-18T21:11:54'));
      const handleChange1 = (newValue) => {
        setValue(newValue);
      };

      const mapURL='https://maps.googleapis.com/maps/api/js?v=3.exp&key=${Credentials.mapsKey}';

      state={profileImg:'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png'}
      imageHandler = (e) => {
        const reader = new FileReader();
        reader.onload = () =>{
          if(reader.readyState === 2){
            this.setState({profileImg: reader.result})
          }
        }
        reader.readAsDataURL(e.target.files[0])
      };
      reader() ;{
        const { profileImg} = this.state

  return (
    
    <main>
          <Formulario action=''>

          <div className="page">
				<div className="container">
					<h1 className="heading">Add your Image</h1>
					<div className="img-holder">
						<img src={profileImg} alt="" id="img" className="img" />
					</div>
					<input type="file" accept="image/*" name="image-upload" id="input" onChange={this.imageHandler} />
					<div className="label">
          <label className="image-upload" htmlFor="input">
						<i className="material-icons">add_photo_alternate</i>
						Choose your Photo
					</label>
          </div>
				</div>
			</div>

            <div>
              <Label htmlFor=''>Registro de Empresa</Label>
              <TextField
              hiddenLabel
              id="filled-hidden-label-Nomre de la Empresa"
              defaultValue="Nomre de la Empresa"
              variant="filled"
              size="large"
            />
            <br></br>
              <br></br>
              <Box sx={{ minWidth: 120 }}>
          <FormControl variant="outlined">
            <InputLabel id="demo-simple-select-label">Tipo de Negocio</InputLabel>
            <Select
            labelId="demo-simple-select-label"
            id="demo-simple-select"
            value={tipo}
            label="Tipo de Negocio"
            onChange={handleChange}
            >
            <MenuItem value={10}>Cafeteria</MenuItem>
            <MenuItem value={20}>Comercial</MenuItem>
            <MenuItem value={30}>Restaurantes</MenuItem>
            </Select>
          </FormControl>
          </Box>
          
          <br></br>
          <TextField
          id="outlined-multiline-static"
          label="Descripcion"
          multiline
          rows={5}
          variant="outlined"
          />

        <br></br>
        <br></br>
        <label className="label">Horarios de Trabajo </label>
          <FormGroup>
            <FormControlLabel control={<Checkbox defaultChecked />} label="Lunes" />
            <FormControlLabel control={<Checkbox defaultChecked />} label="Martes" />
            <FormControlLabel control={<Checkbox defaultChecked />} label="Miercoles" />
            <FormControlLabel control={<Checkbox defaultChecked />} label="Jueves" />
            <FormControlLabel control={<Checkbox defaultChecked />} label="Viernes" />
            <FormControlLabel control={<Checkbox defaultChecked />} label="Sabado" />
            <FormControlLabel control={<Checkbox defaultChecked />} label="Domingo" />
          </FormGroup>
        
            <LocalizationProvider dateAdapter={AdapterDayjs}>
            <Stack spacing={3}>
            <TimePicker
              Label="Hora de Apertura"
              value={value}
              onChange={handleChange1}
              renderInput={(params) => <TextField {...params} />}
            />
            <TimePicker
              label="Hora de Cierre"
              value={value}
              onChange={handleChange1}
              renderInput={(params) => <TextField {...params} />}
            />
            </Stack>
            </LocalizationProvider>
            </div>
            
            <div>
            <br></br>
            <br></br>
            <br></br>
            <TextField
              Label="Contactos"
              id="outlined-size-Contactos"
              defaultValue="Contactos"
              variant="filled"
              size="large"
            />
            <br></br>
            <br></br>
            <br></br>
            <br></br>
            <TextField
              Label="Correo de la Empresa"
              id="outlined-size-Correo de la Empresa"
              defaultValue="Correo de la Empresa"
              variant="filled"
              size="large"
            />
            <br></br>
            <br></br>
            <br></br>
            <br></br>
            <TextField
              Label="Sucursales"
              id="outlined-size-Sucursales"
              defaultValue="Sucursales"
              variant="filled"
              size="large"
            />
          <div>


            
             <Map
              googleMapURL= {mapURL}
              containerElement= {<div style={{height:'400px'}} />}
              mapElement= {<div style={{height: '100%'}} />}
              loadingElement= {<p>Cargando</p> }
            />
          </div>
            </div>
            <Button variant="primary" type="submit">
              Submit
            </Button>
            
      </Formulario>
       </main>  
  );
 }
}

export default App;